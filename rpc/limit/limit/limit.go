// Code generated by goctl. DO NOT EDIT!
// Source: limit.proto

package limit

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Limit interface {
		IsLimit(ctx context.Context, in *LimitReq, opts ...grpc.CallOption) (*LimitResp, error)
	}

	defaultLimit struct {
		cli zrpc.Client
	}
)

func NewLimit(cli zrpc.Client) Limit {
	return &defaultLimit{
		cli: cli,
	}
}

func (m *defaultLimit) IsLimit(ctx context.Context, in *LimitReq, opts ...grpc.CallOption) (*LimitResp, error) {
	client := NewLimitClient(m.cli.Conn())
	return client.IsLimit(ctx, in, opts...)
}
